version: "3.8"

services:
  # Test services with different types of DNS records
  web-a-record:
    image: nginx:alpine
    container_name: web-a-record
    labels:
      # Simple A record with automatic IP
      "dns.cloudflare.hostname": "test-b.${DOMAIN:-example.com}"
      "dns.cloudflare.type": "A"
      "dns.cloudflare.proxied": "true"
      # Uses default DNS settings
      "traefik.enable": "true"
      "traefik.http.routers.web.rule": "Host(`web.domain.com`)"

  web-cname:
    image: nginx:alpine
    container_name: web-cname
    labels:
      # CNAME record pointing to another domain
      "dns.cloudflare.hostname": "www.${DOMAIN:-example.com}"
      "dns.cloudflare.type": "CNAME"
      "dns.cloudflare.content": "${DOMAIN:-example.com}"
      # Override default settings
      "traefik.enable": "true"
      "traefik.http.routers.web.rule": "Host(`www.domain.com`)"

  web-multi-records:
    image: nginx:alpine
    container_name: web-multi-records
    labels:
      # Multiple records for the same service
      "dns.cloudflare.hostname": "api.${DOMAIN:-example.com}"
      "dns.cloudflare.type": "A"
      # Second record with suffix
      "dns.cloudflare.hostname.v6": "api.${DOMAIN:-example.com}"
      "dns.cloudflare.type.v6": "AAAA"
      "dns.cloudflare.content.v6": "2001:db8::1"

  dns-manager:
    image: node:20
    working_dir: /app
    command: yarn dev
    init: true
    environment:
      - CLOUDFLARE_TOKEN=${CLOUDFLARE_TOKEN}
      - LOG_LEVEL=debug
      - USE_TRAEFIK_LABELS=true
      # Default DNS settings
      - DNS_DEFAULT_RECORD_TYPE=A
      - DNS_DEFAULT_CONTENT=
      - DNS_DEFAULT_PROXIED=true
      - DNS_DEFAULT_TTL=1
      - FORCE_COLOR=1
      - NODE_ENV=development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .:/app
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      endpoint_mode: vip
    tty: true
